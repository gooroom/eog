diff --git a/data/eog-zoom-entry.ui b/data/eog-zoom-entry.ui
index 59ba631d..64011cca 100644
--- a/data/eog-zoom-entry.ui
+++ b/data/eog-zoom-entry.ui
@@ -2,6 +2,9 @@
 <!-- Generated with glade 3.20.0 -->
 <interface>
   <requires lib="gtk+" version="3.20"/>
+  <object class="GtkEntryBuffer" id="entry_buffer">
+    <signal name="inserted-text" handler="eog_zoom_entry_insert_text_cb" object="EogZoomEntry" swapped="no"/>
+  </object>
   <object class="GtkImage" id="img_zoom_in">
     <property name="visible">True</property>
     <property name="can_focus">False</property>
@@ -35,6 +38,7 @@
       <object class="GtkEntry" id="value_entry">
         <property name="visible">True</property>
         <property name="can_focus">True</property>
+        <property name="buffer">entry_buffer</property>
         <property name="max_length">5</property>
         <property name="width_chars">9</property>
         <property name="text">2000%</property>
diff --git a/src/eog-zoom-entry.c b/src/eog-zoom-entry.c
index 2bd8ba80..f7e250b9 100644
--- a/src/eog-zoom-entry.c
+++ b/src/eog-zoom-entry.c
@@ -30,6 +30,7 @@
 #include "eog-zoom-entry.h"
 #include <glib/gi18n.h>
 #include <gtk/gtk.h>
+#include <gdk/gdkkeysyms.h>
 #include <math.h>
 
 enum {
@@ -42,6 +43,7 @@ typedef struct _EogZoomEntryPrivate {
 	GtkWidget *btn_zoom_in;
 	GtkWidget *btn_zoom_out;
 	GtkWidget *value_entry;
+	GtkWidget *entry_buffer;
 
 	EogScrollView *view;
 
@@ -176,6 +178,62 @@ get_popup (EogZoomEntry *zoom_entry)
 	return zoom_entry->priv->popup;
 }
 
+static gboolean
+on_key_event (GtkEntry *entry, GdkEventKey *event, gpointer user_data)
+{
+    if(event->keyval == GDK_KEY_0 || event->keyval == GDK_KEY_KP_0)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_1 || event->keyval == GDK_KEY_KP_1)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_2 || event->keyval == GDK_KEY_KP_2)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_3 || event->keyval == GDK_KEY_KP_3)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_4 || event->keyval == GDK_KEY_KP_4)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_5 || event->keyval == GDK_KEY_KP_5)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_6 || event->keyval == GDK_KEY_KP_6)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_7 || event->keyval == GDK_KEY_KP_7)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_8 || event->keyval == GDK_KEY_KP_8)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_9 || event->keyval == GDK_KEY_KP_9)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_percent)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_Delete || event->keyval == GDK_KEY_KP_Delete 
+            ||event->keyval == GDK_KEY_BackSpace)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_Right || event->keyval == GDK_KEY_KP_Right)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_Left || event->keyval == GDK_KEY_KP_Left)
+        return FALSE;
+    else if(event->keyval == GDK_KEY_Return || event->keyval == GDK_KEY_KP_Enter)
+        return FALSE;
+
+    else
+        return TRUE;
+}
+
+static void
+eog_zoom_entry_insert_text_cb (GtkEntryBuffer *buffer,
+                                guint           position,
+                                gchar           *chars,
+                                guint           n_chars,
+                                EogZoomEntry    *zoom_entry)
+{
+    EogZoomEntry *entry = zoom_entry;
+    g_signal_connect (entry->priv->value_entry, "key_press_event", G_CALLBACK(on_key_event), NULL);
+
+    if(!g_ascii_isdigit(chars[0])){
+        if(chars[0] != '%'){
+            gtk_entry_buffer_delete_text (buffer, position, n_chars);
+        }
+    }
+}
+
 static void
 eog_zoom_entry_icon_press_cb (GtkEntry *entry, GtkEntryIconPosition icon_pos,
                               GdkEvent *event, gpointer data)
@@ -328,11 +386,16 @@ eog_zoom_entry_class_init (EogZoomEntryClass *klass)
 	gtk_widget_class_bind_template_child_private (wklass,
 	                                              EogZoomEntry,
 	                                              value_entry);
+    gtk_widget_class_bind_template_child_private (wklass,
+	                                              EogZoomEntry,
+	                                              entry_buffer);
 
 	gtk_widget_class_bind_template_callback (wklass,
 	                                         eog_zoom_entry_activate_cb);
 	gtk_widget_class_bind_template_callback (wklass,
 	                                         eog_zoom_entry_icon_press_cb);
+    gtk_widget_class_bind_template_callback (wklass,
+	                                         eog_zoom_entry_insert_text_cb);
 
 	g_object_class_install_property (object_class, PROP_SCROLL_VIEW,
 	                                 g_param_spec_object ("scroll-view",
